"0","library(kernlab)"
"0",""
"0","#import data from txt."
"0","data <- read.table(""credit_card_data.txt"", header = FALSE)"
"0",""
"0","#define ksvm function. Call the linear equation to find the best C-value"
"0","model <- ksvm(as.matrix(data[,1:10]),as.factor(data[,11]),type='C-svc',kernel='vanilladot',C=10000,scaled=TRUE)"
"1"," Setting default kernel parameters "
"1"," "
"1","
"
"0","# calculate a1…am"
"0","a <- colSums(model@xmatrix[[1]] * model@coef[[1]])"
"0","a"
"1","           V1 "
"1","           V2 "
"1","           V3 "
"1","           V4 "
"1","           V5 "
"1","           V6 "
"1","           V7 "
"1","           V8 "
"1","           V9 "
"1","
"
"1"," 0.0008936167 "
"1"," 0.0016125725 "
"1","-0.0003415921 "
"1"," 0.0042114213 "
"1"," 1.0014527518 "
"1"," 0.0023573637 "
"1"," 0.0052757867 "
"1"," 0.0002803662 "
"1"," 0.0025097815 "
"1","
"
"1","          V10 "
"1","
"
"1"," 0.0035920442 "
"1","
"
"0","# calculate a0"
"0","a0 <- -model@b"
"0","a0"
"1","[1]"
"1"," 0.07046104"
"1","
"
"0","# see what the model predicts"
"0","pred <- predict(model,data[,1:10])"
"0","pred"
"1","  [1]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1"," [63]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[125]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[187]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1","[249]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1","[311]"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1","[373]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1","[435]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[497]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","[559]"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 1"
"1"," 0"
"1","
"
"1","[621]"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1"," 0"
"1","
"
"1",""
"1","Levels: "
"1",""
"1","0 1"
"1",""
"1","
"
"0","# see what fraction of the model’s predictions match the actual classification"
"0","sum(pred == data[,11]) / nrow(data)"
"1","[1]"
"1"," 0.8623853"
"1","
"
