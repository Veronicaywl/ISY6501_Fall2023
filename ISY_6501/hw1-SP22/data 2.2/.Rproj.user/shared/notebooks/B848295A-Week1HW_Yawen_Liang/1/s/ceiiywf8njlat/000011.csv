"0",""
"0","#create function to run for the train and test value"
"0","accuracy_check = function(X){"
"0","  "
"0","  predicted <- rep(0,(nrow(knndata))) "
"0","  "
"0","  for (i in 1:nrow(data))"
"0","  {"
"0","    "
"0","    knn_credit=kknn(V11~.,knndata[-i,],knndata[i,],k=X,distance = 2,scale = TRUE) "
"0","    "
"0","    predicted[i] <- as.integer(fitted(knn_credit)+0.5) # round off to 0 or 1"
"0","  }"
"0","  "
"0","  # calculate % of correct predictions"
"0","  "
"0","  accuracy<- sum(predicted == knndata[,11]) / nrow(data)"
"0","  return(accuracy)"
"0","}"
"0",""
"0","kknn_accuracy <- rep(0,20)"
"0",""
"0","for (i in 1:20) {"
"0","kknn_accuracy[i] <- accuracy_check(i)"
"0","}"
"0",""
"0","kknn_result <- data.frame(kknn_accuracy)"
"0","View(kknn_result)"
"0",""
"0","best_kvalue <- which.max(kknn_accuracy)"
"0","View(best_kvalue)"
"0",""
"0","print(paste0(""The highest kknn accuracy rate is "", max(kknn_accuracy), "" and the best k value is "", best_kvalue))"
"1","[1]"
"1"," ""The highest kknn accuracy rate is 0.853211009174312 and the best k value is 12"""
"1","
"
"0","#Plot the graph for accuracy vs. K-values"
"0","par(bg=""white"")"
"0","plot(kknn_accuracy,ylab=""accuracy level"",xlab=""K values"",type='b',col='blue', main='KKN accuracy')"
"0",""
